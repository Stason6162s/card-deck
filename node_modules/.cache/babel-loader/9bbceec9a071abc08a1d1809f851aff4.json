{"ast":null,"code":"import _slicedToArray from \"/Users/stanislavalekseev/code/card-deck/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stanislavalekseev/code/card-deck/src/components/Deck.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport \"../css/style.css\";\nimport raw from \"./test.txt\";\nvar offers = [{\n  id: 1,\n  position: \"Web designer\",\n  level: \"Middle\",\n  stack: [\"Figma\", \"HTML\", \"Adobe\"],\n  salary: \"60.000\",\n  location: \"Moskow\",\n  company: \"Yandex\",\n  color: \"#fff1d5\"\n}, {\n  id: 2,\n  position: \"Front-end Developer\",\n  level: \"Senior\",\n  stack: [\"React\", \"JavaScript\", \"Node.js\"],\n  salary: \"110.000\",\n  location: \"Ivanovo\",\n  company: \"Gemforge\",\n  color: \"#d5f5ff\"\n}, {\n  id: 3,\n  position: \"React Developer\",\n  level: \"Junior\",\n  stack: [\"React\", \"JavaScript\", \"Redux\"],\n  salary: \"45.000\",\n  location: \"Ivanovo\",\n  company: \"Gemforge\",\n  color: \"#d5f5ff\"\n}, {\n  id: 4,\n  position: \"QA Engineer\",\n  level: \"Junior\",\n  stack: [\"Testing\", \"SQL\"],\n  salary: \"25.000\",\n  location: \"Moskow\",\n  company: \"Melnica\",\n  color: \"#e3ffe4\"\n}, {\n  id: 5,\n  position: \"Python\",\n  level: \"Junior\",\n  stack: [\"Python\", \"Django\", \"Postgresql\"],\n  salary: \"125.000\",\n  location: \"Saint-Petersburg\",\n  company: \"Russoft\",\n  color: \"#91e994\"\n}];\nexport default function Deck(_ref) {\n  var _this = this;\n\n  var count = _ref.count,\n      contenPerPage = _ref.contenPerPage;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var pageCount = Math.ceil(count / contenPerPage);\n  var lastContentIndex = page * contenPerPage;\n  var firstContentIndex = lastContentIndex - contenPerPage;\n\n  var changePage = function changePage(direction) {\n    setPage(function (state) {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n\n        return state - 1;\n      }\n    });\n  };\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      jobs = _useState4[0],\n      setJobs = _useState4[1];\n\n  var offers_list = function offers_list() {\n    fetch(raw).then(function (response) {\n      response.json().then(function (data) {\n        setJobs(data);\n        return data;\n      });\n    });\n  };\n\n  useEffect(function () {\n    offers_list();\n  }, [page]);\n\n  var getSlice = function getSlice(offers) {\n    return offers.slice(firstContentIndex, lastContentIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return changePage(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Back\"), getSlice(offers).map(function (elem) {\n    return /*#__PURE__*/React.createElement(Card, {\n      value: elem,\n      key: elem.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return changePage(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n}","map":{"version":3,"names":["React","useEffect","useState","Card","raw","offers","id","position","level","stack","salary","location","company","color","Deck","count","contenPerPage","page","setPage","pageCount","Math","ceil","lastContentIndex","firstContentIndex","changePage","direction","state","jobs","setJobs","offers_list","fetch","then","response","json","data","getSlice","slice","map","elem"],"sources":["/Users/stanislavalekseev/code/card-deck/src/components/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport \"../css/style.css\";\nimport raw from \"./test.txt\";\n\nconst offers = [\n  {\n    id: 1,\n    position: \"Web designer\",\n    level: \"Middle\",\n    stack: [\"Figma\", \"HTML\", \"Adobe\"],\n    salary: \"60.000\",\n    location: \"Moskow\",\n    company: \"Yandex\",\n    color: \"#fff1d5\",\n  },\n  {\n    id: 2,\n    position: \"Front-end Developer\",\n    level: \"Senior\",\n    stack: [\"React\", \"JavaScript\", \"Node.js\"],\n    salary: \"110.000\",\n    location: \"Ivanovo\",\n    company: \"Gemforge\",\n    color: \"#d5f5ff\",\n  },\n  {\n    id: 3,\n    position: \"React Developer\",\n    level: \"Junior\",\n    stack: [\"React\", \"JavaScript\", \"Redux\"],\n    salary: \"45.000\",\n    location: \"Ivanovo\",\n    company: \"Gemforge\",\n    color: \"#d5f5ff\",\n  },\n  {\n    id: 4,\n    position: \"QA Engineer\",\n    level: \"Junior\",\n    stack: [\"Testing\", \"SQL\"],\n    salary: \"25.000\",\n    location: \"Moskow\",\n    company: \"Melnica\",\n    color: \"#e3ffe4\",\n  },\n  {\n    id: 5,\n    position: \"Python\",\n    level: \"Junior\",\n    stack: [\"Python\", \"Django\", \"Postgresql\"],\n    salary: \"125.000\",\n    location: \"Saint-Petersburg\",\n    company: \"Russoft\",\n    color: \"#91e994\",\n  },\n];\n\nexport default function Deck({ count, contenPerPage }) {\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contenPerPage);\n  const lastContentIndex = page * contenPerPage;\n  const firstContentIndex = lastContentIndex - contenPerPage;\n\n  const changePage = (direction) => {\n    setPage((state) => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n\n  const [jobs, setJobs] = useState([]);\n\n  const offers_list = () => {\n    fetch(raw).then((response) => {\n      response.json().then((data) => {\n        setJobs(data);\n        return data;\n      });\n    });\n  };\n  useEffect(() => {\n    offers_list();\n  }, [page]);\n\n  const getSlice = (offers) => {\n    return offers.slice(firstContentIndex, lastContentIndex);\n  };\n\n  return (\n    <>\n      <div className=\"card-deck\">\n        <button onClick={() => changePage(false)}>Back</button>\n        {getSlice(offers).map((elem) => {\n          return <Card value={elem} key={elem.id} />;\n        })}\n        <button onClick={() => changePage(true)}>Next</button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}