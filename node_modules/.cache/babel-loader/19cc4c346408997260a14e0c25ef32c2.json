{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavalekseev/code/card-deck/src/components/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst persons = [\"levi\", \"stan\", \"roger\", \"penny\", \"leonard\", \"radjesh\", \"hovard\", \"sheldon\", \"max\"];\nconst colors = [\"#fff1d5\", \"#d5f5ff\", \"#e3ffe4\"];\nconst offers = [{\n  id: 1,\n  position: \"Web designer\",\n  level: \"Middle\",\n  stack: [\"Figma\", \"HTML\", \"Adobe\"],\n  salary: \"60.000\",\n  location: \"Moskow\",\n  company: \"Yandex\",\n  color: colors[0]\n}, {\n  id: 2,\n  position: \"Front-end Developer\",\n  level: \"Senior\",\n  stack: [\"React\", \"JavaScript\", \"Node.js\"],\n  salary: \"110.000\",\n  location: \"Ivanovo\",\n  company: \"Gemforge\",\n  color: colors[1]\n}, {\n  id: 3,\n  position: \"React Developer\",\n  level: \"Junior\",\n  stack: [\"React\", \"JavaScript\", \"Redux\"],\n  salary: \"45.000\",\n  location: \"Ivanovo\",\n  company: \"Gemforge\",\n  color: colors[1]\n}, {\n  id: 4,\n  position: \"QA Engineer\",\n  level: \"Junior\",\n  stack: [\"Testing\", \"SQL\"],\n  salary: \"25.000\",\n  location: \"Moskow\",\n  company: \"Melnica\",\n  color: colors[2]\n}];\nexport default function Deck(_ref) {\n  _s();\n\n  let {\n    count,\n    contenPerPage\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contenPerPage);\n  const lastContentIndex = page * contenPerPage;\n  const firstContentIndex = lastContentIndex - contenPerPage;\n\n  const changePage = direction => {\n    setPage(state => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n\n        return state - 1;\n      }\n    });\n  };\n\n  useEffect(() => {}, [page]);\n\n  const getSlice = offers => {\n    return offers.slice(firstContentIndex, lastContentIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-deck\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changePage(false),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), getSlice(offers).map(elem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: elem\n        }, elem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changePage(true),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Deck, \"LMxNfAY58b6loOOsHmH6zd80VGE=\");\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","persons","colors","offers","id","position","level","stack","salary","location","company","color","Deck","count","contenPerPage","page","setPage","pageCount","Math","ceil","lastContentIndex","firstContentIndex","changePage","direction","state","getSlice","slice","map","elem"],"sources":["/Users/stanislavalekseev/code/card-deck/src/components/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/style.css\";\nconst persons = [\n  \"levi\",\n  \"stan\",\n  \"roger\",\n  \"penny\",\n  \"leonard\",\n  \"radjesh\",\n  \"hovard\",\n  \"sheldon\",\n  \"max\",\n];\n\nconst colors = [\"#fff1d5\", \"#d5f5ff\", \"#e3ffe4\"];\nconst offers = [\n  {\n    id: 1,\n    position: \"Web designer\",\n    level: \"Middle\",\n    stack: [\"Figma\", \"HTML\", \"Adobe\"],\n    salary: \"60.000\",\n    location: \"Moskow\",\n    company: \"Yandex\",\n    color: colors[0],\n  },\n  {\n    id: 2,\n    position: \"Front-end Developer\",\n    level: \"Senior\",\n    stack: [\"React\", \"JavaScript\", \"Node.js\"],\n    salary: \"110.000\",\n    location: \"Ivanovo\",\n    company: \"Gemforge\",\n    color: colors[1],\n  },\n  {\n    id: 3,\n    position: \"React Developer\",\n    level: \"Junior\",\n    stack: [\"React\", \"JavaScript\", \"Redux\"],\n    salary: \"45.000\",\n    location: \"Ivanovo\",\n    company: \"Gemforge\",\n    color: colors[1],\n  },\n  {\n    id: 4,\n    position: \"QA Engineer\",\n    level: \"Junior\",\n    stack: [\"Testing\", \"SQL\"],\n    salary: \"25.000\",\n    location: \"Moskow\",\n    company: \"Melnica\",\n    color: colors[2],\n  },\n];\n\nexport default function Deck({ count, contenPerPage }) {\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contenPerPage);\n  const lastContentIndex = page * contenPerPage;\n  const firstContentIndex = lastContentIndex - contenPerPage;\n\n  const changePage = (direction) => {\n    setPage((state) => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n\n  useEffect(() => {}, [page]);\n  const getSlice = (offers) => {\n    return offers.slice(firstContentIndex, lastContentIndex);\n  };\n\n  return (\n    <>\n      <div className=\"card-deck\">\n        <button onClick={() => changePage(false)}>Back</button>\n        {getSlice(offers).map((elem) => {\n          return <div key={elem.id}>{elem}</div>;\n        })}\n        <button onClick={() => changePage(true)}>Next</button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}