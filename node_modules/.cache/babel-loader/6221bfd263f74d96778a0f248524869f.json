{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavalekseev/code/card-deck/src/components/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persons = [\"levi\", \"stan\", \"roger\", \"penny\", \"leonard\", \"radjesh\", \"hovard\", \"sheldon\", \"max\"];\nexport default function Deck(_ref) {\n  _s();\n\n  let {\n    count,\n    contenPerPage\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contenPerPage);\n  const lastContentIndex = page * contenPerPage;\n  const firstContentIndex = lastContentIndex - contenPerPage;\n\n  const changePage = direction => {\n    setPage(state => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n\n        return state - 1;\n      }\n    });\n  };\n\n  useEffect(() => {}, [page]);\n\n  const getSlice = offers => {\n    return offers.slice(firstContentIndex, lastContentIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-deck\",\n    children: [persons.slice(firstContentIndex, lastContentIndex).map(elem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: elem\n      }, persons.indexOf(elem), false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changePage(false),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changePage(true),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deck, \"LMxNfAY58b6loOOsHmH6zd80VGE=\");\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","persons","Deck","count","contenPerPage","page","setPage","pageCount","Math","ceil","lastContentIndex","firstContentIndex","changePage","direction","state","getSlice","offers","slice","map","elem","indexOf"],"sources":["/Users/stanislavalekseev/code/card-deck/src/components/Deck.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst persons = [\n  \"levi\",\n  \"stan\",\n  \"roger\",\n  \"penny\",\n  \"leonard\",\n  \"radjesh\",\n  \"hovard\",\n  \"sheldon\",\n  \"max\",\n];\n\nexport default function Deck({ count, contenPerPage }) {\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contenPerPage);\n  const lastContentIndex = page * contenPerPage;\n  const firstContentIndex = lastContentIndex - contenPerPage;\n\n  const changePage = (direction) => {\n    setPage((state) => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n\n  useEffect(() => {}, [page]);\n  const getSlice = (offers) => {\n    return offers.slice(firstContentIndex, lastContentIndex);\n  };\n  return (\n    <div className=\"card-deck\">\n      {persons.slice(firstContentIndex, lastContentIndex).map((elem) => {\n        return <div key={persons.indexOf(elem)}>{elem}</div>;\n      })}\n      <button onClick={() => changePage(false)}>Back</button>\n      <button onClick={() => changePage(true)}>Next</button>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAG,CACd,MADc,EAEd,MAFc,EAGd,OAHc,EAId,OAJc,EAKd,SALc,EAMd,SANc,EAOd,QAPc,EAQd,SARc,EASd,KATc,CAAhB;AAYA,eAAe,SAASC,IAAT,OAAwC;EAAA;;EAAA,IAA1B;IAAEC,KAAF;IAASC;EAAT,CAA0B;EACrD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAMO,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,GAAGC,aAAlB,CAAlB;EACA,MAAMM,gBAAgB,GAAGL,IAAI,GAAGD,aAAhC;EACA,MAAMO,iBAAiB,GAAGD,gBAAgB,GAAGN,aAA7C;;EAEA,MAAMQ,UAAU,GAAIC,SAAD,IAAe;IAChCP,OAAO,CAAEQ,KAAD,IAAW;MACjB,IAAID,SAAJ,EAAe;QACb,IAAIC,KAAK,KAAKP,SAAd,EAAyB;UACvB,OAAOO,KAAP;QACD;;QACD,OAAOA,KAAK,GAAG,CAAf;MACD,CALD,MAKO;QACL,IAAIA,KAAK,KAAK,CAAd,EAAiB;UACf,OAAOA,KAAP;QACD;;QACD,OAAOA,KAAK,GAAG,CAAf;MACD;IACF,CAZM,CAAP;EAaD,CAdD;;EAgBAf,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACM,IAAD,CAAX,CAAT;;EACA,MAAMU,QAAQ,GAAIC,MAAD,IAAY;IAC3B,OAAOA,MAAM,CAACC,KAAP,CAAaN,iBAAb,EAAgCD,gBAAhC,CAAP;EACD,CAFD;;EAGA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,WACGT,OAAO,CAACgB,KAAR,CAAcN,iBAAd,EAAiCD,gBAAjC,EAAmDQ,GAAnD,CAAwDC,IAAD,IAAU;MAChE,oBAAO;QAAA,UAAkCA;MAAlC,GAAUlB,OAAO,CAACmB,OAAR,CAAgBD,IAAhB,CAAV;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA,CADH,eAIE;MAAQ,OAAO,EAAE,MAAMP,UAAU,CAAC,KAAD,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,OAAO,EAAE,MAAMA,UAAU,CAAC,IAAD,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAnCuBV,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}